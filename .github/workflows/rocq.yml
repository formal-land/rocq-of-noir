name: Rocq

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
    - name: Checkout Noir repo
      uses: actions/checkout@v4

    - name: Download Git submodules
      run: git submodule update --init --recursive

    - name: Run the Rocq tests
      uses: coq-community/docker-coq-action@v1
      with:
        custom_image: coqorg/coq:8.20-ocaml-4.14-flambda
        custom_script: |
          startGroup "Install dependencies"
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source "$HOME/.cargo/env"
            rustup toolchain install 1.84.1-x86_64-unknown-linux-gnu
            cargo --version
            sudo ln -s `which python3` /usr/bin/python
            opam install -y --deps-only RocqOfNoir/rocq-of-noir.opam
          endGroup
          startGroup "Change permissions"
            sudo chown -R $(whoami) .
          endGroup
          startGroup "Generate JSON representation"
            cargo install --path tooling/nargo_cli
            cd noir_stdlib
            nargo test hash::keccak::tests::smoke_test --show-monomorphized
            cd ..
          endGroup
          startGroup "Convert to Rocq"
            python scripts/rocq_of_noir.py noir_stdlib/monomorphized_program.json >RocqOfNoir/keccak/monomorphic.v
            python scripts/rocq_of_noir.py RocqOfNoir/base64/monomorphized_program.json >RocqOfNoir/base64/monomorphic.v
          endGroup
          startGroup "Compile Rocq translations"
            cd RocqOfNoir
            make
            cd ..
          endGroup
          startGroup "Check that the diff is empty (excluding submodules)"
            # We remove these files as the generation is not yet deterministic
            rm noir_stdlib/monomorphized_program.json
            git -c color.ui=always diff --exit-code --ignore-submodules=dirty
          endGroup
